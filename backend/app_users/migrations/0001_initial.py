# Generated by Django 4.1.5 on 2023-08-06 20:32

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=30, null=True, verbose_name='Name')),
                ('phone', models.CharField(max_length=12, unique=True, verbose_name='Phone')),
                ('password', models.CharField(max_length=128, verbose_name='Password')),
                ('type_auto', models.CharField(blank=True, choices=[('Sedan', 'Sedan'), ('Jeep', 'Jeep'), ('Minivan', 'Minivan')], max_length=15, verbose_name='Number Auto')),
                ('number_auto', models.CharField(blank=True, max_length=15, verbose_name='Number Auto')),
                ('role', models.CharField(blank=True, choices=[('light_client', 'light_client'), ('client', 'client'), ('light_partner', 'light_partner'), ('partner', 'partner'), ('light_manager', 'light_manager'), ('manager', 'manager')], max_length=20, null=True, verbose_name='Role')),
                ('notification', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Notification')),
                ('user_code', models.IntegerField(blank=True, null=True, verbose_name='Code')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Phone is verified')),
                ('telegram', models.PositiveSmallIntegerField(default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Telegram')),
                ('whatsapp', models.PositiveSmallIntegerField(default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='WhatsApp')),
                ('chat_id_telegram', models.IntegerField(blank=True, default=None, null=True, verbose_name='Chat ID in Telegram')),
                ('date_create', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Date create')),
                ('soft_delete', models.BooleanField(default=False, verbose_name='Soft delete')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=30, verbose_name='Full name')),
                ('phone', models.CharField(max_length=12, unique=True, verbose_name='Phone')),
                ('user_code', models.IntegerField(verbose_name='Code')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='BankCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=250, null=True, verbose_name='Card number')),
                ('last_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Last 4 number')),
                ('token', models.CharField(blank=True, max_length=255, null=True, verbose_name='Token from kassa24')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_card', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
    ]
